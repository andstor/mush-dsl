/**
 * generated by Xtext 2.22.0
 */
package tdt4250.mush.xtext.tests;

import com.google.inject.Inject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.testing.CompilationTestHelper;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import tdt4250.mush.xtext.tests.MushInjectorProvider;

@ExtendWith(InjectionExtension.class)
@InjectWith(MushInjectorProvider.class)
@SuppressWarnings("all")
public class CompilationTest {
  @Inject
  @Extension
  private CompilationTestHelper _compilationTestHelper;
  
  @Test
  public void compileModel() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("DSL code here");
      _builder.newLine();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("class Foo {");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("String bla");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      this._compilationTestHelper.assertCompilesTo(_builder, _builder_1);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
