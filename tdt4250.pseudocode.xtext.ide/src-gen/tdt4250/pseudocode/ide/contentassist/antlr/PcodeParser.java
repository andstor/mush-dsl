/*
 * generated by Xtext 2.22.0
 */
package tdt4250.pseudocode.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import tdt4250.pseudocode.ide.contentassist.antlr.internal.InternalPcodeParser;
import tdt4250.pseudocode.services.PcodeGrammarAccess;

public class PcodeParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PcodeGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PcodeGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPseudoTypeAccess().getAlternatives(), "rule__PseudoType__Alternatives");
			builder.put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getVisibilityKindAccess().getAlternatives(), "rule__VisibilityKind__Alternatives");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup(), "rule__PseudoClass__Group__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_4(), "rule__PseudoClass__Group_4__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_5(), "rule__PseudoClass__Group_5__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_6(), "rule__PseudoClass__Group_6__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_6_3(), "rule__PseudoClass__Group_6_3__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_7(), "rule__PseudoClass__Group_7__0");
			builder.put(grammarAccess.getPseudoClassAccess().getGroup_7_3(), "rule__PseudoClass__Group_7_3__0");
			builder.put(grammarAccess.getMember_ImplAccess().getGroup(), "rule__Member_Impl__Group__0");
			builder.put(grammarAccess.getMember_ImplAccess().getGroup_4(), "rule__Member_Impl__Group_4__0");
			builder.put(grammarAccess.getMember_ImplAccess().getGroup_5(), "rule__Member_Impl__Group_5__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup(), "rule__PseudoInterface__Group__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_4(), "rule__PseudoInterface__Group_4__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_5(), "rule__PseudoInterface__Group_5__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_6(), "rule__PseudoInterface__Group_6__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_6_3(), "rule__PseudoInterface__Group_6_3__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_7(), "rule__PseudoInterface__Group_7__0");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getGroup_7_3(), "rule__PseudoInterface__Group_7_3__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_4(), "rule__Field__Group_4__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_5(), "rule__Field__Group_5__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_6(), "rule__Field__Group_6__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup(), "rule__Operation_Impl__Group__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup_4(), "rule__Operation_Impl__Group_4__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup_5(), "rule__Operation_Impl__Group_5__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup_6(), "rule__Operation_Impl__Group_6__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup_7(), "rule__Operation_Impl__Group_7__0");
			builder.put(grammarAccess.getOperation_ImplAccess().getGroup_7_3(), "rule__Operation_Impl__Group_7_3__0");
			builder.put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
			builder.put(grammarAccess.getMethodAccess().getGroup_4(), "rule__Method__Group_4__0");
			builder.put(grammarAccess.getMethodAccess().getGroup_5(), "rule__Method__Group_5__0");
			builder.put(grammarAccess.getMethodAccess().getGroup_6(), "rule__Method__Group_6__0");
			builder.put(grammarAccess.getMethodAccess().getGroup_7(), "rule__Method__Group_7__0");
			builder.put(grammarAccess.getMethodAccess().getGroup_7_3(), "rule__Method__Group_7_3__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_4(), "rule__Constructor__Group_4__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_5(), "rule__Constructor__Group_5__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_6(), "rule__Constructor__Group_6__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_7(), "rule__Constructor__Group_7__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_7_3(), "rule__Constructor__Group_7_3__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getParameterAccess().getGroup_4(), "rule__Parameter__Group_4__0");
			builder.put(grammarAccess.getPseudoClassAccess().getNameAssignment_2(), "rule__PseudoClass__NameAssignment_2");
			builder.put(grammarAccess.getPseudoClassAccess().getVisibilityAssignment_4_1(), "rule__PseudoClass__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getPseudoClassAccess().getTypeAssignment_5_1(), "rule__PseudoClass__TypeAssignment_5_1");
			builder.put(grammarAccess.getPseudoClassAccess().getSuperTypesAssignment_6_2(), "rule__PseudoClass__SuperTypesAssignment_6_2");
			builder.put(grammarAccess.getPseudoClassAccess().getSuperTypesAssignment_6_3_1(), "rule__PseudoClass__SuperTypesAssignment_6_3_1");
			builder.put(grammarAccess.getPseudoClassAccess().getMembersAssignment_7_2(), "rule__PseudoClass__MembersAssignment_7_2");
			builder.put(grammarAccess.getPseudoClassAccess().getMembersAssignment_7_3_1(), "rule__PseudoClass__MembersAssignment_7_3_1");
			builder.put(grammarAccess.getMember_ImplAccess().getNameAssignment_2(), "rule__Member_Impl__NameAssignment_2");
			builder.put(grammarAccess.getMember_ImplAccess().getVisibilityAssignment_4_1(), "rule__Member_Impl__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getMember_ImplAccess().getTypeAssignment_5_1(), "rule__Member_Impl__TypeAssignment_5_1");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getNameAssignment_2(), "rule__PseudoInterface__NameAssignment_2");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getVisibilityAssignment_4_1(), "rule__PseudoInterface__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getTypeAssignment_5_1(), "rule__PseudoInterface__TypeAssignment_5_1");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getSuperTypesAssignment_6_2(), "rule__PseudoInterface__SuperTypesAssignment_6_2");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getSuperTypesAssignment_6_3_1(), "rule__PseudoInterface__SuperTypesAssignment_6_3_1");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getMembersAssignment_7_2(), "rule__PseudoInterface__MembersAssignment_7_2");
			builder.put(grammarAccess.getPseudoInterfaceAccess().getMembersAssignment_7_3_1(), "rule__PseudoInterface__MembersAssignment_7_3_1");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_2(), "rule__Field__NameAssignment_2");
			builder.put(grammarAccess.getFieldAccess().getVisibilityAssignment_4_1(), "rule__Field__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_5_1(), "rule__Field__TypeAssignment_5_1");
			builder.put(grammarAccess.getFieldAccess().getInitializerAssignment_6_1(), "rule__Field__InitializerAssignment_6_1");
			builder.put(grammarAccess.getOperation_ImplAccess().getNameAssignment_2(), "rule__Operation_Impl__NameAssignment_2");
			builder.put(grammarAccess.getOperation_ImplAccess().getVisibilityAssignment_4_1(), "rule__Operation_Impl__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getOperation_ImplAccess().getTypeAssignment_5_1(), "rule__Operation_Impl__TypeAssignment_5_1");
			builder.put(grammarAccess.getOperation_ImplAccess().getExceptionsAssignment_6_1(), "rule__Operation_Impl__ExceptionsAssignment_6_1");
			builder.put(grammarAccess.getOperation_ImplAccess().getParametersAssignment_7_2(), "rule__Operation_Impl__ParametersAssignment_7_2");
			builder.put(grammarAccess.getOperation_ImplAccess().getParametersAssignment_7_3_1(), "rule__Operation_Impl__ParametersAssignment_7_3_1");
			builder.put(grammarAccess.getMethodAccess().getNameAssignment_2(), "rule__Method__NameAssignment_2");
			builder.put(grammarAccess.getMethodAccess().getVisibilityAssignment_4_1(), "rule__Method__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getMethodAccess().getTypeAssignment_5_1(), "rule__Method__TypeAssignment_5_1");
			builder.put(grammarAccess.getMethodAccess().getExceptionsAssignment_6_1(), "rule__Method__ExceptionsAssignment_6_1");
			builder.put(grammarAccess.getMethodAccess().getParametersAssignment_7_2(), "rule__Method__ParametersAssignment_7_2");
			builder.put(grammarAccess.getMethodAccess().getParametersAssignment_7_3_1(), "rule__Method__ParametersAssignment_7_3_1");
			builder.put(grammarAccess.getConstructorAccess().getNameAssignment_2(), "rule__Constructor__NameAssignment_2");
			builder.put(grammarAccess.getConstructorAccess().getVisibilityAssignment_4_1(), "rule__Constructor__VisibilityAssignment_4_1");
			builder.put(grammarAccess.getConstructorAccess().getTypeAssignment_5_1(), "rule__Constructor__TypeAssignment_5_1");
			builder.put(grammarAccess.getConstructorAccess().getExceptionsAssignment_6_1(), "rule__Constructor__ExceptionsAssignment_6_1");
			builder.put(grammarAccess.getConstructorAccess().getParametersAssignment_7_2(), "rule__Constructor__ParametersAssignment_7_2");
			builder.put(grammarAccess.getConstructorAccess().getParametersAssignment_7_3_1(), "rule__Constructor__ParametersAssignment_7_3_1");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
			builder.put(grammarAccess.getParameterAccess().getTypeAssignment_4_1(), "rule__Parameter__TypeAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PcodeGrammarAccess grammarAccess;

	@Override
	protected InternalPcodeParser createParser() {
		InternalPcodeParser result = new InternalPcodeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PcodeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PcodeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
