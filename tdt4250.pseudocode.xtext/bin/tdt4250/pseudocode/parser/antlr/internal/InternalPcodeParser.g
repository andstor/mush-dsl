/*
 * generated by Xtext 2.22.0
 */
parser grammar InternalPcodeParser;

options {
	tokenVocab=InternalPcodeLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package tdt4250.pseudocode.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tdt4250.pseudocode.services.PcodeGrammarAccess;

}

@members {

 	private PcodeGrammarAccess grammarAccess;

    public InternalPcodeParser(TokenStream input, PcodeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected PcodeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_1_0());
				}
				lv_functions_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"functions",
						lv_functions_1_0,
						"tdt4250.pseudocode.Pcode.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"tdt4250.pseudocode.Pcode.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"tdt4250.pseudocode.Pcode.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"tdt4250.pseudocode.Pcode.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)*
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getFunctionAccess().getBEGINTerminalRuleCall_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getFeaturesFeatureParserRuleCall_6_0());
				}
				lv_features_8_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"features",
						lv_features_8_0,
						"tdt4250.pseudocode.Pcode.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getFunctionAccess().getENDTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getStatementParserRuleCall_0());
		}
		this_Statement_0=ruleStatement
		{
			$current = $this_Statement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfExpressionParserRuleCall_0());
		}
		this_IfExpression_0=ruleIfExpression
		{
			$current = $this_IfExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForExpressionParserRuleCall_1());
		}
		this_ForExpression_1=ruleForExpression
		{
			$current = $this_ForExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileExpressionParserRuleCall_2());
		}
		this_WhileExpression_2=ruleWhileExpression
		{
			$current = $this_WhileExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStopParserRuleCall_3());
		}
		this_Stop_3=ruleStop
		{
			$current = $this_Stop_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getVariableParserRuleCall_0());
		}
		this_Variable_0=ruleVariable
		{
			$current = $this_Variable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getPrintParserRuleCall_1());
		}
		this_Print_1=rulePrint
		{
			$current = $this_Print_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCollectionAddParserRuleCall_2());
		}
		this_CollectionAdd_2=ruleCollectionAdd
		{
			$current = $this_CollectionAdd_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCollectionRemoveParserRuleCall_3());
		}
		this_CollectionRemove_3=ruleCollectionRemove
		{
			$current = $this_CollectionRemove_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getValueExchangeParserRuleCall_4());
		}
		this_ValueExchange_4=ruleValueExchange
		{
			$current = $this_ValueExchange_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=EqualsSign
			{
				newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0());
			}
			    |
			otherlv_3=Equals
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getEqualsKeyword_2_1());
			}
			    |
			otherlv_4=Is
			{
				newLeafNode(otherlv_4, grammarAccess.getVariableAccess().getIsKeyword_2_2());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getValueLiteralExpressionParserRuleCall_3_0());
				}
				lv_value_5_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleIfExpression
entryRuleIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpressionRule()); }
	iv_ruleIfExpression=ruleIfExpression
	{ $current=$iv_ruleIfExpression.current; }
	EOF;

// Rule IfExpression
ruleIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfExpressionAccess().getIfExpressionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=If
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIfExpressionAccess().getNameIfKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfExpressionRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "if");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getConditionLiteralExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Then
			{
				newLeafNode(otherlv_3, grammarAccess.getIfExpressionAccess().getThenKeyword_3());
			}
		)?
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getIfExpressionAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getThenFeatureParserRuleCall_5_0());
				}
				lv_then_5_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					add(
						$current,
						"then",
						lv_then_5_0,
						"tdt4250.pseudocode.Pcode.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getIfExpressionAccess().getENDTerminalRuleCall_6());
		}
		(
			(
				(Else)=>
				otherlv_7=Else
				{
					newLeafNode(otherlv_7, grammarAccess.getIfExpressionAccess().getElseKeyword_7_0());
				}
			)
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getIfExpressionAccess().getBEGINTerminalRuleCall_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpressionAccess().getElseFeatureParserRuleCall_7_2_0());
					}
					lv_else_9_0=ruleFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
						}
						add(
							$current,
							"else",
							lv_else_9_0,
							"tdt4250.pseudocode.Pcode.Feature");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_10=RULE_END
			{
				newLeafNode(this_END_10, grammarAccess.getIfExpressionAccess().getENDTerminalRuleCall_7_3());
			}
		)?
	)
;

// Entry rule entryRuleForExpression
entryRuleForExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForExpressionRule()); }
	iv_ruleForExpression=ruleForExpression
	{ $current=$iv_ruleForExpression.current; }
	EOF;

// Rule ForExpression
ruleForExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForExpressionAccess().getForExpressionAction_0(),
					$current);
			}
		)
		otherlv_1=For
		{
			newLeafNode(otherlv_1, grammarAccess.getForExpressionAccess().getForKeyword_1());
		}
		(
			otherlv_2=Interval
			{
				newLeafNode(otherlv_2, grammarAccess.getForExpressionAccess().getIntervalKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getFromArithmeticExpressionParserRuleCall_3_0());
				}
				lv_from_3_0=ruleArithmeticExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"from",
						lv_from_3_0,
						"tdt4250.pseudocode.Pcode.ArithmeticExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=To
		{
			newLeafNode(otherlv_4, grammarAccess.getForExpressionAccess().getToKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getToArithmeticExpressionParserRuleCall_5_0());
				}
				lv_to_5_0=ruleArithmeticExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"to",
						lv_to_5_0,
						"tdt4250.pseudocode.Pcode.ArithmeticExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_6=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_6, grammarAccess.getForExpressionAccess().getBEGINTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getBlockFeatureParserRuleCall_7_0());
				}
				lv_block_7_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					add(
						$current,
						"block",
						lv_block_7_0,
						"tdt4250.pseudocode.Pcode.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getForExpressionAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileExpressionRule()); }
	iv_ruleWhileExpression=ruleWhileExpression
	{ $current=$iv_ruleWhileExpression.current; }
	EOF;

// Rule WhileExpression
ruleWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1=While
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileExpressionAccess().getWhileKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getConditionLiteralExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getWhileExpressionAccess().getBEGINTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getBlockFeatureParserRuleCall_4_0());
				}
				lv_block_4_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					add(
						$current,
						"block",
						lv_block_4_0,
						"tdt4250.pseudocode.Pcode.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getWhileExpressionAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleStop
entryRuleStop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStopRule()); }
	iv_ruleStop=ruleStop
	{ $current=$iv_ruleStop.current; }
	EOF;

// Rule Stop
ruleStop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStopAccess().getStopAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						lv_type_1_1=Stop
						{
							newLeafNode(lv_type_1_1, grammarAccess.getStopAccess().getTypeStopKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStopRule());
							}
							setWithLastConsumed($current, "type", lv_type_1_1, null);
						}
						    |
						lv_type_1_2=Break
						{
							newLeafNode(lv_type_1_2, grammarAccess.getStopAccess().getTypeBreakKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStopRule());
							}
							setWithLastConsumed($current, "type", lv_type_1_2, null);
						}
						    |
						lv_type_1_3=Continue
						{
							newLeafNode(lv_type_1_3, grammarAccess.getStopAccess().getTypeContinueKeyword_1_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStopRule());
							}
							setWithLastConsumed($current, "type", lv_type_1_3, null);
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_type_2_0=Return
						{
							newLeafNode(lv_type_2_0, grammarAccess.getStopAccess().getTypeReturnKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getStopRule());
							}
							setWithLastConsumed($current, "type", lv_type_2_0, "return");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getStopAccess().getValueTypeParserRuleCall_1_1_1_0());
						}
						lv_value_3_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStopRule());
							}
							set(
								$current,
								"value",
								lv_value_3_0,
								"tdt4250.pseudocode.Pcode.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_rulePrint=rulePrint
	{ $current=$iv_rulePrint.current; }
	EOF;

// Rule Print
rulePrint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=Print
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPrintAccess().getNamePrintKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrintRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "print");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintAccess().getValueLiteralExpressionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCollectionAdd
entryRuleCollectionAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionAddRule()); }
	iv_ruleCollectionAdd=ruleCollectionAdd
	{ $current=$iv_ruleCollectionAdd.current; }
	EOF;

// Rule CollectionAdd
ruleCollectionAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollectionAddAccess().getCollectionAddAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectionAddRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCollectionAddAccess().getCollectionVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2=Add
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionAddAccess().getAddKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionAddAccess().getValueLiteralExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionAddRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCollectionRemove
entryRuleCollectionRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionRemoveRule()); }
	iv_ruleCollectionRemove=ruleCollectionRemove
	{ $current=$iv_ruleCollectionRemove.current; }
	EOF;

// Rule CollectionRemove
ruleCollectionRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollectionRemoveAccess().getCollectionAddAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCollectionRemoveRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCollectionRemoveAccess().getCollectionVariableCrossReference_1_0());
				}
			)
		)
		otherlv_2=Remove
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionRemoveAccess().getRemoveKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionRemoveAccess().getValueLiteralExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionRemoveRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValueExchange
entryRuleValueExchange returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueExchangeRule()); }
	iv_ruleValueExchange=ruleValueExchange
	{ $current=$iv_ruleValueExchange.current; }
	EOF;

// Rule ValueExchange
ruleValueExchange returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueExchangeAccess().getValueExchangeAction_0(),
					$current);
			}
		)
		otherlv_1=Exchange
		{
			newLeafNode(otherlv_1, grammarAccess.getValueExchangeAccess().getExchangeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueExchangeAccess().getCollectionLiteralExpressionParserRuleCall_2_0());
				}
				lv_collection_2_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
					}
					set(
						$current,
						"collection",
						lv_collection_2_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=With
		{
			newLeafNode(otherlv_3, grammarAccess.getValueExchangeAccess().getWithKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueExchangeAccess().getValueLiteralExpressionParserRuleCall_4_0());
				}
				lv_value_4_0=ruleLiteralExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueExchangeRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"tdt4250.pseudocode.Pcode.LiteralExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionCallAccess().getFunctionCallAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"tdt4250.pseudocode.Pcode.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"tdt4250.pseudocode.Pcode.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=Comma
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"tdt4250.pseudocode.Pcode.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	iv_ruleLiteralExpression=ruleLiteralExpression
	{ $current=$iv_ruleLiteralExpression.current; }
	EOF;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getCollectionParserRuleCall_0());
		}
		this_Collection_0=ruleCollection
		{
			$current = $this_Collection_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getCollectionAccessorParserRuleCall_1());
		}
		this_CollectionAccessor_1=ruleCollectionAccessor
		{
			$current = $this_CollectionAccessor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralExpressionAccess().getBooleanExpressionParserRuleCall_2());
		}
		this_BooleanExpression_2=ruleBooleanExpression
		{
			$current = $this_BooleanExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCollection
entryRuleCollection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionRule()); }
	iv_ruleCollection=ruleCollection
	{ $current=$iv_ruleCollection.current; }
	EOF;

// Rule Collection
ruleCollection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionAccess().getCollectionLitteralParserRuleCall_0());
		}
		this_CollectionLitteral_0=ruleCollectionLitteral
		{
			$current = $this_CollectionLitteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionAccess().getListParserRuleCall_1());
		}
		this_List_1=ruleList
		{
			$current = $this_List_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListAccess().getListAction_0(),
					$current);
			}
		)
		(
			otherlv_1=A
			{
				newLeafNode(otherlv_1, grammarAccess.getListAccess().getAKeyword_1());
			}
		)?
		otherlv_2=New
		{
			newLeafNode(otherlv_2, grammarAccess.getListAccess().getNewKeyword_2());
		}
		(
			(
				(
					lv_type_3_1=Text
					{
						newLeafNode(lv_type_3_1, grammarAccess.getListAccess().getTypeTextKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_1, null);
					}
					    |
					lv_type_3_2=Number
					{
						newLeafNode(lv_type_3_2, grammarAccess.getListAccess().getTypeNumberKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_2, null);
					}
					    |
					lv_type_3_3=Decimal
					{
						newLeafNode(lv_type_3_3, grammarAccess.getListAccess().getTypeDecimalKeyword_3_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListRule());
						}
						setWithLastConsumed($current, "type", lv_type_3_3, null);
					}
				)
			)
		)
		(
			otherlv_4=Array
			{
				newLeafNode(otherlv_4, grammarAccess.getListAccess().getArrayKeyword_4_0());
			}
			    |
			otherlv_5=List
			{
				newLeafNode(otherlv_5, grammarAccess.getListAccess().getListKeyword_4_1());
			}
			    |
			otherlv_6=Table
			{
				newLeafNode(otherlv_6, grammarAccess.getListAccess().getTableKeyword_4_2());
			}
		)
		(
			otherlv_7=And
			{
				newLeafNode(otherlv_7, grammarAccess.getListAccess().getAndKeyword_5_0());
			}
			otherlv_8=Contains
			{
				newLeafNode(otherlv_8, grammarAccess.getListAccess().getContainsKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListAccess().getElementsLiteralExpressionParserRuleCall_5_2_0());
					}
					lv_elements_9_0=ruleLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListRule());
						}
						add(
							$current,
							"elements",
							lv_elements_9_0,
							"tdt4250.pseudocode.Pcode.LiteralExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=Comma
				{
					newLeafNode(otherlv_10, grammarAccess.getListAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListAccess().getElementsLiteralExpressionParserRuleCall_5_3_1_0());
						}
						lv_elements_11_0=ruleLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListRule());
							}
							add(
								$current,
								"elements",
								lv_elements_11_0,
								"tdt4250.pseudocode.Pcode.LiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleCollectionLitteral
entryRuleCollectionLitteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionLitteralRule()); }
	iv_ruleCollectionLitteral=ruleCollectionLitteral
	{ $current=$iv_ruleCollectionLitteral.current; }
	EOF;

// Rule CollectionLitteral
ruleCollectionLitteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCollectionLitteralAccess().getSetLitteralParserRuleCall_0());
		}
		this_SetLitteral_0=ruleSetLitteral
		{
			$current = $this_SetLitteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCollectionLitteralAccess().getListLitteralParserRuleCall_1());
		}
		this_ListLitteral_1=ruleListLitteral
		{
			$current = $this_ListLitteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetLitteral
entryRuleSetLitteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetLitteralRule()); }
	iv_ruleSetLitteral=ruleSetLitteral
	{ $current=$iv_ruleSetLitteral.current; }
	EOF;

// Rule SetLitteral
ruleSetLitteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetLitteralAccess().getSetLitteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getSetLitteralAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetLitteralAccess().getElementsLiteralExpressionParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetLitteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"tdt4250.pseudocode.Pcode.LiteralExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getSetLitteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSetLitteralAccess().getElementsLiteralExpressionParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSetLitteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"tdt4250.pseudocode.Pcode.LiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getSetLitteralAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleListLitteral
entryRuleListLitteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListLitteralRule()); }
	iv_ruleListLitteral=ruleListLitteral
	{ $current=$iv_ruleListLitteral.current; }
	EOF;

// Rule ListLitteral
ruleListLitteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListLitteralAccess().getListLitteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getListLitteralAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListLitteralAccess().getElementsLiteralExpressionParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleLiteralExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListLitteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"tdt4250.pseudocode.Pcode.LiteralExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getListLitteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListLitteralAccess().getElementsLiteralExpressionParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListLitteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"tdt4250.pseudocode.Pcode.LiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getListLitteralAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionAccessor
entryRuleCollectionAccessor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionAccessorRule()); }
	iv_ruleCollectionAccessor=ruleCollectionAccessor
	{ $current=$iv_ruleCollectionAccessor.current; }
	EOF;

// Rule CollectionAccessor
ruleCollectionAccessor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCollectionAccessorAccess().getCollectionAccessorAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCollectionAccessorRule());
							}
						}
						otherlv_1=RULE_ID
						{
							newLeafNode(otherlv_1, grammarAccess.getCollectionAccessorAccess().getCollectionVariableCrossReference_1_0_0_0());
						}
					)
				)
				(
					otherlv_2=LeftSquareBracket
					{
						newLeafNode(otherlv_2, grammarAccess.getCollectionAccessorAccess().getLeftSquareBracketKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCollectionAccessorAccess().getAccessorLiteralExpressionParserRuleCall_1_0_1_1_0());
							}
							lv_accessor_3_0=ruleLiteralExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCollectionAccessorRule());
								}
								add(
									$current,
									"accessor",
									lv_accessor_3_0,
									"tdt4250.pseudocode.Pcode.LiteralExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_4=RightSquareBracket
					{
						newLeafNode(otherlv_4, grammarAccess.getCollectionAccessorAccess().getRightSquareBracketKeyword_1_0_1_2());
					}
				)+
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCollectionAccessorRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getCollectionAccessorAccess().getCollectionVariableCrossReference_1_1_0_0());
						}
					)
				)
				otherlv_6=At
				{
					newLeafNode(otherlv_6, grammarAccess.getCollectionAccessorAccess().getAtKeyword_1_1_1());
				}
				(
					otherlv_7=Index
					{
						newLeafNode(otherlv_7, grammarAccess.getCollectionAccessorAccess().getIndexKeyword_1_1_2());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getCollectionAccessorAccess().getAccessorLiteralExpressionParserRuleCall_1_1_3_0());
						}
						lv_accessor_8_0=ruleLiteralExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCollectionAccessorRule());
							}
							add(
								$current,
								"accessor",
								lv_accessor_8_0,
								"tdt4250.pseudocode.Pcode.LiteralExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9=Comma
					{
						newLeafNode(otherlv_9, grammarAccess.getCollectionAccessorAccess().getCommaKeyword_1_1_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCollectionAccessorAccess().getAccessorLiteralExpressionParserRuleCall_1_1_4_1_0());
							}
							lv_accessor_10_0=ruleLiteralExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCollectionAccessorRule());
								}
								add(
									$current,
									"accessor",
									lv_accessor_10_0,
									"tdt4250.pseudocode.Pcode.LiteralExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getBooleanExpressionAccess().getAndOrExpressionLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1=VerticalLineVerticalLine
							{
								newLeafNode(lv_op_2_1, grammarAccess.getBooleanExpressionAccess().getOpVerticalLineVerticalLineKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getBooleanExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2=AmpersandAmpersand
							{
								newLeafNode(lv_op_2_2, grammarAccess.getBooleanExpressionAccess().getOpAmpersandAmpersandKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getBooleanExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getRightComparisonParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tdt4250.pseudocode.Pcode.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getEqualsParserRuleCall_0());
		}
		this_Equals_0=ruleEquals
		{
			$current = $this_Equals_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1=LessThanSign
							{
								newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2=GreaterThanSign
							{
								newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getComparisonRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightEqualsParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleEquals
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tdt4250.pseudocode.Pcode.Equals");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEquals
entryRuleEquals returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualsRule()); }
	iv_ruleEquals=ruleEquals
	{ $current=$iv_ruleEquals.current; }
	EOF;

// Rule Equals
ruleEquals returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualsAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=ruleAddition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getEqualsAccess().getEqualsLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1=EqualsSignEqualsSign
							{
								newLeafNode(lv_op_2_1, grammarAccess.getEqualsAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEqualsRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2=LessThanSignEqualsSign
							{
								newLeafNode(lv_op_2_2, grammarAccess.getEqualsAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEqualsRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
							    |
							lv_op_2_3=GreaterThanSignEqualsSign
							{
								newLeafNode(lv_op_2_3, grammarAccess.getEqualsAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEqualsRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_3, null);
							}
							    |
							lv_op_2_4=ExclamationMarkEqualsSign
							{
								newLeafNode(lv_op_2_4, grammarAccess.getEqualsAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getEqualsRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_4, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualsAccess().getRightAdditionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleAddition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualsRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tdt4250.pseudocode.Pcode.Addition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getAdditionParserRuleCall());
	}
	this_Addition_0=ruleAddition
	{
		$current = $this_Addition_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getPlusOperatorParserRuleCall_1_0_0_1());
					}
					rulePlusOperator
					{
						afterParserOrEnumRuleCall();
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					(
						otherlv_4=HyphenMinus
						{
							newLeafNode(otherlv_4, grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1_0());
						}
						    |
						otherlv_5=Minus
						{
							newLeafNode(otherlv_5, grammarAccess.getAdditionAccess().getMinusKeyword_1_0_1_1_1());
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0());
					}
					lv_right_6_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_6_0,
							"tdt4250.pseudocode.Pcode.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOperator
entryRulePlusOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPlusOperatorRule()); }
	iv_rulePlusOperator=rulePlusOperator
	{ $current=$iv_rulePlusOperator.current.getText(); }
	EOF;

// Rule PlusOperator
rulePlusOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=PlusSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPlusOperatorAccess().getPlusSignKeyword_0());
		}
		    |
		kw=Plus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPlusOperatorAccess().getPlusKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPrefixedParserRuleCall_0());
		}
		this_Prefixed_0=rulePrefixed
		{
			$current = $this_Prefixed_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationAccess().getMultiOrDivLeftAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_op_2_1=Asterisk
							{
								newLeafNode(lv_op_2_1, grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultiplicationRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_1, null);
							}
							    |
							lv_op_2_2=Solidus
							{
								newLeafNode(lv_op_2_2, grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMultiplicationRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_2, null);
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPrefixedParserRuleCall_1_1_0());
					}
					lv_right_3_0=rulePrefixed
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"tdt4250.pseudocode.Pcode.Prefixed");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrefixed
entryRulePrefixed returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrefixedRule()); }
	iv_rulePrefixed=rulePrefixed
	{ $current=$iv_rulePrefixed.current; }
	EOF;

// Rule Prefixed
rulePrefixed returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrefixedAccess().getBooleanNegationAction_0_0(),
						$current);
				}
			)
			(
				(ExclamationMark)=>
				otherlv_1=ExclamationMark
				{
					newLeafNode(otherlv_1, grammarAccess.getPrefixedAccess().getExclamationMarkKeyword_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_0,
							"tdt4250.pseudocode.Pcode.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrefixedAccess().getArithmeticSignedAction_1_0(),
						$current);
				}
			)
			(
				((
					HyphenMinus
					    |
					Minus
				)
				)=>
				(
					otherlv_4=HyphenMinus
					{
						newLeafNode(otherlv_4, grammarAccess.getPrefixedAccess().getHyphenMinusKeyword_1_1_0_0());
					}
					    |
					otherlv_5=Minus
					{
						newLeafNode(otherlv_5, grammarAccess.getPrefixedAccess().getMinusKeyword_1_1_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrefixedAccess().getExpressionAtomicParserRuleCall_1_2_0());
					}
					lv_expression_6_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrefixedRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"tdt4250.pseudocode.Pcode.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrefixedAccess().getAtomicParserRuleCall_2());
		}
		this_Atomic_7=ruleAtomic
		{
			$current = $this_Atomic_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getAtomicAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getNumberLiteralAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_4_0=RULE_INT
					{
						newLeafNode(lv_value_4_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringLiteralAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_6_0=RULE_STRING
					{
						newLeafNode(lv_value_6_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_6_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBooleanLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_8_1=True
						{
							newLeafNode(lv_value_8_1, grammarAccess.getAtomicAccess().getValueTrueKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_8_1, null);
						}
						    |
						lv_value_8_2=False
						{
							newLeafNode(lv_value_8_2, grammarAccess.getAtomicAccess().getValueFalseKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAtomicRule());
							}
							setWithLastConsumed($current, "value", lv_value_8_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getVariableReferenceAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getAtomicAccess().getRefVariableCrossReference_4_1_0());
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getAtomicAccess().getFunctionCallParserRuleCall_5());
		}
		this_FunctionCall_11=ruleFunctionCall
		{
			$current = $this_FunctionCall_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEStringParserRuleCall_0());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_DOUBLE_1=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_1);
		}
		{
			newLeafNode(this_DOUBLE_1, grammarAccess.getTypeAccess().getDOUBLETerminalRuleCall_1());
		}
		    |
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getTypeAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;
