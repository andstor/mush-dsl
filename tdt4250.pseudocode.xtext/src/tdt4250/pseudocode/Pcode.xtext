// automatically generated by Xtext
grammar tdt4250.pseudocode.Pcode with org.eclipse.xtext.common.Terminals

import "platform:/plugin/tdt4250.pseudocode.model/model/pseudocode.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

PseudoClass returns PseudoClass:
	{PseudoClass}
	name=EString
	(members+=Constructor)*
	('\n')*
	(members+=Method)*
;


Member returns Member:
 PseudoClass | Method | Constructor ;

Constructor returns Constructor:
	{Constructor}
	name='('
	(parameters+=Parameter ("," parameters+=Parameter)*)*	
	')'
;

Method returns Method:
	{Method}
	name=EString
	'('
		(parameters+=Parameter ("," parameters+=Parameter)*)*		
	')'
	('\n')*
			body=Body
	('return' Type )*	
;

Body returns Body:
	{Body}
	statements += (Variable|If|For|While)*
;

Variable returns Variable:
	{Variable}
	EString '=' Type
;

Expression returns Expression:
	{Expression}
;

If returns If:
	{If}
	'if' Type ('==' |'<' |'<=' | '>' | '>=') Type
;
For returns For:
	{For}
	'for(' ')'
;

While returns While:
	{While}
;


Parameter returns Parameter: 
	{Parameter}
	name=EString
;

Type:
	(EString | DOUBLE | INT)
;


enum VisibilityKind returns VisibilityKind:
				packagePrivate = 'packagePrivate' | private = 'private' | protected = 'protected' | public = 'public';

EString returns ecore::EString:
	STRING | ID;
	
terminal DOUBLE:
    INT '.' INT;


