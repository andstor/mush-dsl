// automatically generated by Xtext
grammar tdt4250.pseudocode.Pcode with org.eclipse.xtext.common.Terminals

import "platform:/plugin/tdt4250.pseudocode.model/model/pseudocode.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

PseudoClass returns PseudoClass:
	{PseudoClass}
	'PseudoClass'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('superTypes' '(' superTypes+=[PseudoType|EString] ( "," superTypes+=[PseudoType|EString])* ')' )?
		('members' '{' members+=Member ( "," members+=Member)* '}' )?
	'}';

PseudoType returns PseudoType:
	PseudoClass | PseudoInterface;

Member returns Member:
	Member_Impl | PseudoClass | PseudoInterface | Field | Operation_Impl | Method | Constructor;



enum VisibilityKind returns VisibilityKind:
				packagePrivate = 'packagePrivate' | private = 'private' | protected = 'protected' | public = 'public';

EString returns ecore::EString:
	STRING | ID;

Member_Impl returns Member:
	{Member}
	'Member'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
	'}';

PseudoInterface returns PseudoInterface:
	{PseudoInterface}
	'PseudoInterface'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('superTypes' '(' superTypes+=[PseudoType|EString] ( "," superTypes+=[PseudoType|EString])* ')' )?
		('members' '{' members+=Member ( "," members+=Member)* '}' )?
	'}';

Field returns Field:
	{Field}
	'Field'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('initializer' initializer=[Expression|EString])?
	'}';

Operation_Impl returns Operation:
	{Operation}
	'Operation'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('exceptions' exceptions=[PseudoType|EString])?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

Method returns Method:
	{Method}
	'Method'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('exceptions' exceptions=[PseudoType|EString])?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

Constructor returns Constructor:
	{Constructor}
	'Constructor'
	name=EString
	'{'
		('visibility' visibility=VisibilityKind)?
		('type' type=[PseudoType|EString])?
		('exceptions' exceptions=[PseudoType|EString])?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

Expression returns Expression:
	{Expression}
	'Expression'
	;

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	name=EString
	'{'
		('type' type=[PseudoType|EString])?
	'}';
