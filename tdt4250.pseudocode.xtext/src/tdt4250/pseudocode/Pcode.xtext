// automatically generated by Xtext
grammar tdt4250.pseudocode.Pcode with org.eclipse.xtext.common.Terminals

import "platform:/plugin/tdt4250.pseudocode.model/model/pseudocode.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


/* Det er fortsatt litt rot i modellen, sorry! Will fix!
 * Tror at Expression skal være ok nå ;)
 */


// OK
Model returns Model:
	{Model}
	functions+=Function*
;

// OK
Function:
	{Function}
	name=EString
	'('
	(parameters+=Parameter ("," parameters+=Parameter)*)*		
	')'
	//('\n' ('\n')*)
	BEGIN
		features+=Feature*
	END;

Feature:
	(Statement | Variable)
;

Statement:
	(IfExpression | For | While | Stop)
;


Variable returns Variable:
	{Variable}	
	name=EString ('=' value=Expression)? // Er lov å skrive x=y=2?
;

/*
// TODO: lag ecore modell
CollectionLitteral:
	SetLitteral | ListLitteral
;

// TODO: lag ecore modell
SetLitteral:
	{SetLitteral}
	'{' (elements+=Expression (',' elements+=Expression )*)? '}'
;

// TODO: lag ecore modell
ListLitteral:
	{ListLitteral}
	'[' (elements+=Expression (',' elements+=Expression )*)? ']'
;
*/

IfExpression returns IfExpression:
	{IfExpression}
	'if' condition=Expression':'  // må sjekke etter newline elns for å fjerne ':'
	then=Expression 
    (=>'else' else=Expression)?
;

For returns For:
	{For}
	'for''(' (
	//Original for loop
	(EString '=' INT ';' EString BooleanOperator Type';' EString ('++'|'--'|'+' INT|'-' INT)) 
	//For Each	
	| (EString ':' EString)	
	//Same as for each..
	|('all' EString)
	//for a given interval in list
	|('interval' INT 'to' INT 'in' EString)
	)')'
;

While returns While:
	{While}
	'while' ('true'|('!')? EString)
;

Parameter returns Parameter: 
	{Parameter}
	name=Type
;

Stop returns Stop:
	{Stop}
	(type=('stop'| 'break'| 'continue') | (type='return' value=Type))
;

BooleanOperator:
	'&&' | '||' | '!' | '^'
;

BooleanTestOperator:
	'==' |'<' |'<=' | '>' | '>=' | '!='
;

Type:
	(EString | DOUBLE | INT)
;

EString returns ecore::EString:
	STRING | ID;
	
terminal DOUBLE:
    INT '.' INT;


// OK
FunctionCall:
	{FunctionCall}
	name=EString '(' (parameters+=Parameter ("," parameters+=Parameter)*)? ')';



// Dette stryer innrykk
terminal BEGIN: 'synthetic:BEGIN';
terminal END: 'synthetic:END';



// Under her burde være OK.
Expression:
	BooleanExpression;

BooleanExpression returns Expression:
	Comparison 
	(({AndOrExpression.left=current} op=("||"|"&&")) right=Comparison)*;

Comparison returns Expression:
       Equals
       (({Comparison.left=current} op=('<' | '>')) right=Equals)*;

Equals returns Expression:
       Addition 
       (({Equals.left=current} op=('==' |'<=' | '>=' | '!=')) right=Addition)*;
 
Addition returns Expression:
	Multiplication (({Plus.left=current} '+' | {Minus.left=current} '-') right=Multiplication)*; 

Multiplication returns Expression:
	Prefixed (({MultiOrDiv.left=current} op=("*"|"/")) right=Prefixed)*;

Prefixed returns Expression:
	{BooleanNegation} =>"!" expression=Atomic | /* right associativity */
	{ArithmeticSigned} =>"-" expression=Atomic | /* right associativity */
	Atomic;

Atomic returns Expression:
	'(' Expression ')' |
	{NumberLiteral} value=INT |
	{StringLiteral} value=STRING |
	{BooleanLiteral} value=('true'|'false') |
	{VariableReference} ref=[Variable] |
	FunctionCall;