/**
 * generated by Xtext 2.22.0
 */
package tdt4250.pseudocode.pseudocode;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see tdt4250.pseudocode.pseudocode.PseudocodeFactory
 * @model kind="package"
 * @generated
 */
public interface PseudocodePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pseudocode";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.pseudocode.tdt4250/xtext/Pcode";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pseudocode";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PseudocodePackage eINSTANCE = tdt4250.pseudocode.pseudocode.impl.PseudocodePackageImpl.init();

  /**
   * The meta object id for the '{@link tdt4250.pseudocode.pseudocode.impl.SizeExpressionImpl <em>Size Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see tdt4250.pseudocode.pseudocode.impl.SizeExpressionImpl
   * @see tdt4250.pseudocode.pseudocode.impl.PseudocodePackageImpl#getSizeExpression()
   * @generated
   */
  int SIZE_EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE_EXPRESSION__VALUE = tdt4250.pseudocode.PseudocodePackage.EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Size Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIZE_EXPRESSION_FEATURE_COUNT = tdt4250.pseudocode.PseudocodePackage.EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link tdt4250.pseudocode.pseudocode.SizeExpression <em>Size Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Size Expression</em>'.
   * @see tdt4250.pseudocode.pseudocode.SizeExpression
   * @generated
   */
  EClass getSizeExpression();

  /**
   * Returns the meta object for the containment reference '{@link tdt4250.pseudocode.pseudocode.SizeExpression#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see tdt4250.pseudocode.pseudocode.SizeExpression#getValue()
   * @see #getSizeExpression()
   * @generated
   */
  EReference getSizeExpression_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PseudocodeFactory getPseudocodeFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link tdt4250.pseudocode.pseudocode.impl.SizeExpressionImpl <em>Size Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see tdt4250.pseudocode.pseudocode.impl.SizeExpressionImpl
     * @see tdt4250.pseudocode.pseudocode.impl.PseudocodePackageImpl#getSizeExpression()
     * @generated
     */
    EClass SIZE_EXPRESSION = eINSTANCE.getSizeExpression();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIZE_EXPRESSION__VALUE = eINSTANCE.getSizeExpression_Value();

  }

} //PseudocodePackage
